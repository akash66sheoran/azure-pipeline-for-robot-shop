trigger: none

pool:
  vmImage: ubuntu-latest

resources:
  repositories:
    - repository: eks-setup-repo
      type: github
      endpoint: robot-shop
      name: akash66sheoran/eks-cluster-setup-terraform
    - repository: robot-shop-repo
      type: github
      endpoint: robot-shop
      name: akash66sheoran/robot-shop
    - repository: tf-backend-repo
      type: github
      endpoint: robot-shop
      name: akash66sheoran/remote-backend-setup-for-tf

jobs:
  - job: install_terraform
    steps:
      - bash: sudo apt update
        displayName: 'update apt repository'

      - bash: sudo apt install -y gnupg software-properties-common
        displayName: 'install required dependencies'

      - task: Bash@3
        displayName: 'install hashicorp gpg key'
        inputs:
          targetType: 'inline'
          script: |
            wget -O- https://apt.releases.hashicorp.com/gpg | \
            gpg --dearmor | \
            sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg > /dev/null

      - task: Bash@3
        displayName: 'Verify the keys fingerprint'
        inputs:
          targetType: 'inline'
          script: |
            gpg --no-default-keyring \
            --keyring /usr/share/keyrings/hashicorp-archive-keyring.gpg \
            --fingerprint

      - task: Bash@3
        displayName: 'add the HashiCorp repository to apt sources list'
        inputs:
          targetType: 'inline'
          script: |
            echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] \
            https://apt.releases.hashicorp.com $(lsb_release -cs) main" | \
            sudo tee /etc/apt/sources.list.d/hashicorp.list
      
      - bash: sudo apt update && sudo apt install terraform -y
        displayName: 'update apt and install Terraform'
      
      - bash: terraform version
        displayName: terraform_version

  - job: setup_tf_backend_infra
    dependsOn: install_terraform
    steps:
    - checkout: tf-backend-repo
      displayName: 'checkout remote-backend-setup-for-tf repo'
      
    - task: Bash@3
      displayName: 'terraform init'
      env:
        AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY_ID)
        AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)
        AWS_DEFAULT_REGION: $(AWS_DEFAULT_REGION)
      inputs:
        targetType: 'inline'
        script: 'terraform init'
        workingDirectory: '$(Build.SourcesDirectory)'

    - task: Bash@3
      displayName: 'terraform apply'
      env:
        AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY_ID)
        AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)
        AWS_DEFAULT_REGION: $(AWS_DEFAULT_REGION)
      inputs:
        targetType: 'inline'
        script: 'terraform apply --auto-approve'
        workingDirectory: '$(Build.SourcesDirectory)'

  - job: setup_eks_cluster
    dependsOn: setup_tf_backend_infra
    steps:
    - checkout: eks-setup-repo
      displayName: 'checkout eks-cluster-setup-terraform repo'

    - task: Bash@3
      displayName: 'terraform init'
      inputs:
        targetType: 'inline'
        script: 'terraform init'
        workingDirectory: '$(Build.SourcesDirectory)'
    
    - task: Bash@3
      displayName: 'terraform apply'
      env:
        AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY_ID)
        AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)
        AWS_DEFAULT_REGION: $(AWS_DEFAULT_REGION)
      inputs:
        targetType: 'inline'
        script: 'terraform apply --auto-approve'
        workingDirectory: '$(Build.SourcesDirectory)'